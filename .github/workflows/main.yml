name: CI Pipeline
 
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
 
jobs:
  test:
    runs-on: ubuntu-latest
   
    strategy:
      matrix:
        node-version: [22.x]
   
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
   
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
   

    - name: Install dependencies
      run: npm ci
   
    - name: Run unit tests
      run: npm run test:unit
   
    - name: Run integration tests
      run: npm run test:integration
   
    - name: Generate test coverage
      run: npm run test:coverage

    - name: Run ESLint
      run: npm run lint

    - name: Run audit-ci
      run: npx audit-ci --moderate

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
  lint-and-security:
    runs-on: ubuntu-latest
    name: Code Quality & Security
   
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
   
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
   
    - name: Install dependencies
      run: npm ci
   
    - name: Run ESLint
      run: npm run lint
   
    - name: Run security audit
      run: npx audit-ci --moderate
 
  unit-tests:
    runs-on: ubuntu-latest
    name: Unit Tests
    needs: lint-and-security
   
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
   
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
   
    - name: Install dependencies
      run: npm ci
   
    - name: Run unit tests
      run: npm run test:unit -- --verbose
   
    - name: Upload unit test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: unit-test-results
        path: coverage/
 
  integration-tests:
    runs-on: ubuntu-latest
    name: Integration Tests
    needs: unit-tests
   
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
   
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
   
    - name: Install dependencies
      run: npm ci
   
    - name: Run integration tests
      run: npm run test:integration -- --verbose
   
    - name: Generate coverage report
      run: npm run test:coverage
   
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
 
  build-and-deploy:
    runs-on: ubuntu-latest
    name: Build & Deploy
    needs: [unit-tests, integration-tests]
    if: github.ref == 'refs/heads/main'
   
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
   
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
   
    - name: Install dependencies
      run: npm ci
   
    - name: Build application
      run: npm run build || echo "No build step defined"
   
    - name: Deploy to staging
      run: echo "Deploying to staging environment..."
   
    - name: Run smoke tests
      run: |
        npm start &
        sleep 5
        curl -f http://localhost:3000 || exit 1
        pkill -f "node app.js"